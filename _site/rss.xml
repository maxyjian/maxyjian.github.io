<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Max Blog</title>
    <description>Believe verything is willing！</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 02 Sep 2018 16:40:53 +0800</pubDate>
    <lastBuildDate>Sun, 02 Sep 2018 16:40:53 +0800</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>ubuntu 上将 Python 工程打包(deb安装包)</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;   我们写好一个 python 工程后常常需要将软件打包,便于将写好的软件安装在其他没有安装工作环境的电脑上。下面介绍一个 python 工程的打包过程,分为两大步骤:&lt;/p&gt;

&lt;p&gt;   一、将工程打包生成一个可执行文件;&lt;/p&gt;

&lt;p&gt;   二、将可执行文件和工程依赖的所有文件制作成.deb 安装包。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;将工程打包生成一个可执行文件&quot;&gt;将工程打包生成一个可执行文件&lt;/h2&gt;

&lt;p&gt;   首先给系统装个 easy_install, 如果装了的可以跳过这步。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-setuptools python-dev build-essential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;   官网上下载 pyinstaller,网址:  &lt;a href=&quot;http://www.pyinstaller.org/&quot;&gt;http://www.pyinstaller.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;   解包进入源码目录:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unzip PyInstaller-3.2.zip
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;pyinstaller-3.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;   将需打包的工程文件夹里面所有需要的文件 ( 包含主函数文件,如 test.py ) 拷贝到当前目录 ( pyinstaller-3.2 )，生成可执行文件，cd 到 pyinstaller 目录 , 执行:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; python pyinstaller.py test.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;   将工程里面除了 .py 文件 ( 作用 : 保留源码 ) 外的所有依赖文件(如数据文件)按原来在工程中的目录拷贝到当前目录的 /test/dist/test 下,在其他工作目录下运行可执行文件 ( 如 /usr/test( 绝对路径 )), 看是否可以执行,若不能运行,可能是以下原因:&lt;/p&gt;

&lt;p&gt;   (1) 、路径中有汉字;&lt;/p&gt;

&lt;p&gt;   (2) 、你的 python 程序中有路径不会随文件目录变化而变化;&lt;/p&gt;

&lt;p&gt;   (3) 、依赖文件没有拷贝或拷贝不完整。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;制作成-deb-安装包&quot;&gt;制作成 .deb 安装包&lt;/h2&gt;
&lt;h5 id=&quot;制作打包文件夹&quot;&gt;制作打包文件夹&lt;/h5&gt;
&lt;p&gt;   新建一个文件夹,例如在用户目录下新建 mydeb 文件夹，在 mydeb 文件夹建立如下结构的文件夹和文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    |——mydeb
        |————usr
            |————lib
                |——可执行文件及执行所需依赖文件&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;安装后,就在你的/usr/lib 生成相应的可执行文件&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            |————share
                |—icons
                    |——deb.png&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;启动器图标文件生成到/usr/share/icons/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                |———applications
                    |——deb.desktop&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;桌面文件生成到/usr/share/applications/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        |————DEBIAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;大写、用来制作打包文件&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            |————control&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;描述 deb 包的信息必须的文件&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;   [TIPS]:deb.desktop 的建立,sudo gedit deb.desktop,下方设置为.desktop 格式,输入如下内容:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Desktop Entry]
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mydeb                           &lt;span class=&quot;c&quot;&gt;#这个是程序名称&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;制作 deb 的工具 &lt;span class=&quot;c&quot;&gt;#注释&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/test                   &lt;span class=&quot;c&quot;&gt;#可执行文件存放的位置&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/share/deb.png    &lt;span class=&quot;c&quot;&gt;#图标存放的位置&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Terminal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                        &lt;span class=&quot;c&quot;&gt;#是否使用终端&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Application                  &lt;span class=&quot;c&quot;&gt;#应用类型&lt;/span&gt;
X-Ubuntu-Touch&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;#这个暂时我也不知道是什么用的&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Development  &lt;span class=&quot;c&quot;&gt;#分类&lt;/span&gt;
Name[en]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;desktop            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;   [TIPS]:&lt;/p&gt;

&lt;p&gt;   1、#的内容都要删除,不要有任何注释等不必要的信息,否则有时会出现启动程序错误。&lt;/p&gt;

&lt;p&gt;   2、#文件夹名首尾千万不要出现空格,否则会出错。&lt;/p&gt;

&lt;p&gt;   3、Categories 可以取以下值,表示程序的启动快捷方式放在哪个菜单下:&lt;/p&gt;

&lt;p&gt;       应用 Application;&lt;/p&gt;

&lt;p&gt;       Network 放在互联网(Internet);&lt;/p&gt;

&lt;p&gt;        办公 Office;&lt;/p&gt;

&lt;p&gt;        图形 Graphics;&lt;/p&gt;

&lt;p&gt;        声音和视 AudioVideo;&lt;/p&gt;

&lt;p&gt;        系统工具 System;&lt;/p&gt;

&lt;p&gt;        编程 Development;&lt;/p&gt;

&lt;p&gt;       附件 Utility;&lt;/p&gt;

&lt;p&gt;        影音 AudioVideo;&lt;/p&gt;

&lt;p&gt;        游戏 Game;&lt;/p&gt;

&lt;p&gt;        首选项 Settings(GNOME;GTK;Settings;HardwareSettings;);&lt;/p&gt;

&lt;p&gt;        系统管理 System。&lt;/p&gt;

&lt;p&gt;   4、control 文件内容输入相关信息:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package: mydeb &lt;span class=&quot;c&quot;&gt;#安装包的名称&lt;/span&gt;
version: 1.0.0 &lt;span class=&quot;c&quot;&gt;#版本&lt;/span&gt;
architecture: i386 &lt;span class=&quot;c&quot;&gt;#平台maintainer: yang #维护者&lt;/span&gt;
description: you can description the deb &lt;span class=&quot;c&quot;&gt;#描述安装包的信息&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;h5 id=&quot;打包&quot;&gt;打包&lt;/h5&gt;
&lt;p&gt;   在 mydeb 文件夹的路径上:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; mydeb program-mydeb_1.0.0_i386.deb 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;   deb 包正确的命名规则 program-name_version_architeture.deb,最好与它们在 control 文件
里对应的语句相同。&lt;/p&gt;

&lt;h5 id=&quot;安装&quot;&gt;安装&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; program-mydeb_1.0.0_i386.deb 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  或者直接双击.deb 文件,会进入软件中心,点击安装即可。&lt;/p&gt;

&lt;h5 id=&quot;卸载&quot;&gt;卸载&lt;/h5&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; mydeb 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  [TIPS]:1、安装好软件后启动器在/usr/share 下的的 applications 中,可以直接启动。&lt;/p&gt;

&lt;p&gt;       2、本例也许并不是很符合.deb 打包标准,但是可以安装运行。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;备注&quot;&gt;备注：&lt;/h2&gt;

&lt;p&gt;      参考博客:&lt;/p&gt;

&lt;p&gt;         &lt;a href=&quot;http://blog.csdn.net/yangbingzhou/article/details/33318625&quot;&gt;http://blog.csdn.net/yangbingzhou/article/details/33318625&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;         &lt;a href=&quot;http://blog.csdn.net/linda1000/article/details/12946297&quot;&gt;http://blog.csdn.net/linda1000/article/details/12946297&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/01/python_deb.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/01/python_deb.html</guid>
        
        <category>python</category>
        
        <category>deb</category>
        
        <category>ubuntu</category>
        
        
      </item>
    
      <item>
        <title>在Github上使用jekyll框架建个人博客</title>
        <description>&lt;h2 id=&quot;新建本地和github仓库&quot;&gt;新建本地和github仓库&lt;/h2&gt;

&lt;h4 id=&quot;安装git&quot;&gt;安装git&lt;/h4&gt;

&lt;p&gt;  检查是否已安装git&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yangjian@ubuntu:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git version
    version 2.17.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  若没有安装,使用如下命令安装&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git git-core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;用户配置&quot;&gt;用户配置&lt;/h4&gt;

&lt;p&gt;  前提是已经注册github账号，具体注册过程就不用说了&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config –global user.name “你的Github用户名”
git config –global user.email “你的Github邮箱地址”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;配置ssh-key&quot;&gt;配置SSH Key&lt;/h4&gt;
&lt;p&gt;  因为git是通过ssh的方式访问资源库，需要创建用于git访问github仓库用的公钥。&lt;/p&gt;
&lt;h5 id=&quot;1生成公钥&quot;&gt;1、生成公钥&lt;/h5&gt;
&lt;p&gt;  使用如下命令：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; ‘你的Github邮箱地址’ &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yangjian@ubuntu:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; “maxyjian@gmail.com” &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa
Generating public/private rsa key pair.
Enter file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;which to save the key &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/home/yangjian/.ssh/id_rsa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 
Enter passphrase &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;no passphrase&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 
Enter same passphrase again: 
Your identification has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/yangjian/.ssh/id_rsa.
Your public key has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/yangjian/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:92I1aOtg9wm4ZYk1dhtyA8nN7IaimwVuXVg8gY5KlcI “maxyjian@gmail.com”
The key&lt;span class=&quot;s1&quot;&gt;'s randomart image is:
+---[RSA 2048]----+
|   .   . ..      |
|    E o .o *     |
|     o o  B +    |
|    . . .o *     |
|   . .. S @ X    |
|    .. + X @ =   |
|      + B X o    |
|     . = O + .   |
|      o . . o    |
+----[SHA256]-----+
yangjian@ubuntu:~/.ssh$ gedit id_rsa.pub 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  可以指定密钥文件及密码，也可以不指定直接回车，然后打开刚创建的id_rsa.pub文件，复制其中所有内容。&lt;/p&gt;
&lt;h5 id=&quot;2把生成的公钥填写到github中&quot;&gt;2、把生成的公钥填写到Github中&lt;/h5&gt;
&lt;p&gt;  点击右上角你的头像settings–SSH and GPG keys ,进入如下界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/1.png&quot; alt=&quot;图片1&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  点击New SSH key如下，随便输入title，在key粘贴SSH key,然后Add SSH key。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/2.png&quot; alt=&quot;图片2&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;3进行ssh认证&quot;&gt;3、进行SSH认证&lt;/h5&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yangjian@ubuntu:~/.ssh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-T&lt;/span&gt; git@github.com
Hi maxyjian! You&lt;span class=&quot;s1&quot;&gt;'ve successfully authenticated, but GitHub does not provide shell access.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;4创建版本库并初始化&quot;&gt;4、创建版本库并初始化&lt;/h5&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yangjian@ubuntu:~ &lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;testgit
yangjian@ubuntu:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;testgit/
yangjian@ubuntu:~/learngit&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  初始化空的 Git 仓库位于 /home/yangjian/testgit/.git/&lt;/p&gt;
&lt;h5 id=&quot;5创建远程仓库&quot;&gt;5、创建远程仓库&lt;/h5&gt;
&lt;p&gt;  在github上托管自己的代码须先去github创建一个repository,如图，点击New repository。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/3.png&quot; alt=&quot;图片3&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  输入repository name，点击creat repository。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/4.png&quot; alt=&quot;图片4&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  进入到repository界面,记住git和http地址。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/5.png&quot; alt=&quot;图片5&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  下面为本地git添加远程仓库：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin git@github.com:xxx.git #此处替换为自己的git地址
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  若要删除这个repository，进入settings，翻到最下面，选择Delete this repository，如图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/6.png&quot; alt=&quot;图片6&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;6上传本地文件&quot;&gt;6、上传本地文件&lt;/h5&gt;
&lt;p&gt;  现在我们上传一个readme.txt文件：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gedit readme.txt
git add readme.txt 
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wrote a readme file&quot;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  再次进入你刚刚创建的repository，就能看见你上传的readme.txt文件了。若要更换地址，需要先删除，再重新添加。删除命令:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用jekyll搭建博客&quot;&gt;使用jekyll搭建博客&lt;/h2&gt;
&lt;h4 id=&quot;安装jekyll&quot;&gt;安装jekyll&lt;/h4&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;build-essential
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ruby-full
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rubygems
which gem     //查看gem的安装位置，正常显示“/usr/bin/gem”
 
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem  update   &lt;span class=&quot;nt&quot;&gt;--system&lt;/span&gt;     //升级rubygems到最新版本
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;curl
curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://deb.nodesource.com/setup_6.x | sudo &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; bash - 
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; apt-get install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; nodejs
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jekyll
jekyll   &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;           //查看jekyll的版本
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;创建博客代码&quot;&gt;创建博客代码&lt;/h4&gt;
&lt;p&gt;  输入如下命令:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  提示：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Your user account isn&lt;span class=&quot;s1&quot;&gt;'t allowed to install to the system RubyGems.
You can cancel this installation and run:
      bundle install --path vendor/bundle
  to install the gems into ./vendor/bundle/, or you can enter your password
  and install the bundled gems to RubyGems using sudo.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  输入系统用户密码即可。博客内容在_post文件夹中，一定要以日期为开头来命名，文件使用markdown文件格式，默认采用kramdown解析器，具体语法不作介绍。使用命令jekyll server可进入本地服务，在本地浏览。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;blog
jekyll server
Configuration file: /home/yangjian/jekyll/blog/_config.yml
            Source: /home/yangjian/jekyll/blog
       Destination: /home/yangjian/jekyll/blog/_site
 Incremental build: disabled. Enable with &lt;span class=&quot;nt&quot;&gt;--incremental&lt;/span&gt;
      Generating... 
                    &lt;span class=&quot;k&quot;&gt;done in &lt;/span&gt;0.843 seconds.
 Auto-regeneration: enabled &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/home/yangjian/jekyll/blog'&lt;/span&gt;
    Server address: http://127.0.0.1:4000/
  Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  使用浏览器进入&lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/ &lt;/a&gt; 可在本地查看博客，如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/jekyllblog/7.png&quot; alt=&quot;图片7&quot; height=&quot;40%&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  如果不想自己去写，可以参考别人的博客源码或者下载一个主题&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt; ，修改其中的_config.yml进行配置，推荐一个主题：&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://jekyllthemes.org/themes/jekyll-theme-h2o/&quot;&gt;http://jekyllthemes.org/themes/jekyll-theme-h2o/&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;托管博客到github&quot;&gt;托管博客到github&lt;/h4&gt;
&lt;p&gt;  先把源码提交到本地仓库，再push到github上，命令如下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test theme&quot;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  如里有报下面的错误：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;To git@git.oschina.net:yangzhi/hello.git
 &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rejected]        master -&amp;gt; master &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;fetch first&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
error: failed to push some refs to &lt;span class=&quot;s1&quot;&gt;'git@git.oschina.net:yangzhi/hello.git'&lt;/span&gt;
hint: Updates were rejected because the remote contains work that you &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;hint: not have locally. This is usually caused by another repository pushin
hint: to the same ref. You may want to first merge the remote changes &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;e.g.
hint: &lt;span class=&quot;s1&quot;&gt;'git pull'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; before pushing again.
hint: See the &lt;span class=&quot;s1&quot;&gt;'Note about fast-forwards'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'git push --help'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  输入下面这条指令，强制将本地的修改覆盖远程仓库的版本(不建议使用)：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  上传到github之后就可以使用repository的http地址访问你的博客了。&lt;/p&gt;

&lt;h3 id=&quot;参考博客&quot;&gt;参考博客：&lt;/h3&gt;

&lt;p&gt;    https://blog.csdn.net/u012168038/article/details/77715439&lt;/p&gt;

&lt;p&gt;    https://blog.csdn.net/shursulei/article/details/73017668&lt;/p&gt;

&lt;p&gt;    https://www.cnblogs.com/litifeng/p/6337614.html&lt;/p&gt;

</description>
        <pubDate>Sat, 01 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/01/jekyllgithubblog.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/01/jekyllgithubblog.html</guid>
        
        <category>github</category>
        
        <category>jekyll</category>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>利用搬瓦工和shadowsocks实现翻墙</title>
        <description>&lt;h2 id=&quot;购买搬瓦工服务器&quot;&gt;购买搬瓦工服务器&lt;/h2&gt;

&lt;p&gt;1、进入&lt;a href=&quot;https://www.bwh1.net/&quot;&gt;&lt;strong&gt;搬瓦工官网&lt;/strong&gt;&lt;/a&gt; ；&lt;/p&gt;

&lt;p&gt;2、注册自己的账号；
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/4.png&quot; alt=&quot;图片1&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3、登录账号，然后进入VPS Hosting根据需求选择要购买的主机，我选择的是10G VPS的Order KVM，19.99刀/年，点击Order KVM后可以看到配置，选择最下面add to cart进入购买；
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/5.png&quot; alt=&quot;图片2&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;
4、可以输入优惠码参与可以打折，然后checkout，选择Alipay使用支付宝扫码支付。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;在购买的主机上安装shadowsocks&quot;&gt;在购买的主机上安装shadowsocks&lt;/h2&gt;

&lt;p&gt;1、点击client Area，可看到如下界面，进入services—-&amp;gt;my services—-&amp;gt; kiwiVMControl Panel；
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/6.png&quot; alt=&quot;图片3&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2、在Main controls中可以看到IP地址和SSH端口，可开机关机；在Root password modifiction中可设置root用户密码，可用于SSH登录；
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/11.png&quot; alt=&quot;图片4&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3、左下方可看到Shadowsocks server，进入(若没有这个选项，如下图，则进入此网页：&lt;a href=&quot;https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks&quot;&gt;shadowsocks server&lt;/a&gt; ）；
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/8.png&quot; alt=&quot;图片5&quot; height=&quot;15%&quot; width=&quot;15%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4、一键安装shadowsocks，如图：
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/10.png&quot; alt=&quot;图片6&quot; height=&quot;30%&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5、然后进行配置，设置加密方式为、服务器端口和密码，如下图，记录下来，若没有running则选择start，running之后就搭建好了。
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/9.png&quot; alt=&quot;图片7&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;安卓手机翻墙&quot;&gt;安卓手机翻墙&lt;/h2&gt;

&lt;p&gt;   下载&lt;a href=&quot;https://m.ddooo.com/softdown/75259.htm&quot;&gt;&lt;strong&gt;影梭app&lt;/strong&gt;&lt;/a&gt; ，安装后进入，服务器写服务器IP地址，远程端口写shadowsocks server port，本地端口不需要改，密码写shadowsocks server password，加密方式要与服务器一致，我的是aes-256-cfb，点击app右上方云朵图标，连接上就可以google了，自测youtobe看视频也无压力(最好不要用全局，不然国内网站也要走服务器，浪费流量还容易被封)。
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/12.png&quot; alt=&quot;图片8&quot; height=&quot;20%&quot; width=&quot;20%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;windows翻墙&quot;&gt;windows翻墙&lt;/h2&gt;

&lt;p&gt;   下载&lt;a href=&quot;https://github.com/zhoudaxiaa/ss-client&quot;&gt;&amp;lt;&lt;strong&gt;ShadowsocksR-4.7.0-win&lt;/strong&gt;&lt;/a&gt; ，解压后进入ShadowsocksR-dotnet4.0.exe，设置好服务器IP，shadowsocks端口、密码以及加密方式，然后确定。
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/13.png&quot; alt=&quot;图片9&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;   界面如下:
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/14.png&quot; alt=&quot;图片10&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;ubuntu1804翻墙&quot;&gt;Ubuntu18.04翻墙&lt;/h2&gt;

&lt;h4 id=&quot;安装shadowsocks&quot;&gt;安装shadowsocks&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-pip
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-m2crypto
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;运行shadowsocks&quot;&gt;运行shadowsocks&lt;/h4&gt;

&lt;p&gt;   编辑配置文件/etc/shadowsocks.json 我们可以配置如下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;96.56.19.78&quot;&lt;/span&gt;,
       &lt;span class=&quot;s2&quot;&gt;&quot;server_port&quot;&lt;/span&gt;:493,
       &lt;span class=&quot;s2&quot;&gt;&quot;local_address&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;192.168.0.1&quot;&lt;/span&gt;,
       &lt;span class=&quot;s2&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
       &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;N3Y2YTdlDW&quot;&lt;/span&gt;,
       &lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;   &lt;em&gt;[TIPS]: 加密方式推荐使用rc4-md5，因为 RC4 比 AES 速度快好几倍，如果用在路由器上会带来显著性能提升。旧的 RC4 加密之所以不安全是因为 Shadowsocks 在每个连接上重复使用 key，没有使用 IV。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;配置完成之后使用配置文件在后台运行：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sslocal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/shadowsocks.json &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-start&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;#停止为stop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果遇到错误：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Undefined symbol:EVP_CIPHER_CTX_cleanup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改方法：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /错误提示/python2.7/site-packages/shadowsocks/crypto/openssl.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;cleanup&lt;/code&gt;改为&lt;code class=&quot;highlighter-rouge&quot;&gt;reset&lt;/code&gt;（我的是52和111行），保存并退出，再次执行启动命令（若已start先stop），至此，系统代理服务开启了。&lt;/p&gt;

&lt;h4 id=&quot;配置chrome浏览器&quot;&gt;配置chrome浏览器&lt;/h4&gt;

&lt;p&gt;第一步：我们需要下载一个chrome 浏览器的插件 Proxy SwitchyOmega：
安装Proxy SwitchyOmega插件为了能够让chrome自动切换是否使用系统代理，在chrome浏览器 设置–-&amp;gt;扩展程序-–&amp;gt;更多扩展程序–-&amp;gt;进行搜索。
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/15.png&quot; alt=&quot;图片11&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二步：安装完成之后，我们会在浏览器的菜单栏看到一个蓝色环形小图标，如图，点击进入选项：
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/16.png&quot; alt=&quot;图片12&quot; height=&quot;30%&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第三步：我们按照之前 etc/shadowsocks.json 里面的配置进行相应的配置，如下图所示：在情景模式中选择 proxy，在代理服务器中的代理协议选择 socks5，本地代理服务器:shadowsocks的localIP，代理端口1080。
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/17.png&quot; alt=&quot;图片13&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;   进入情景模式Autoswitch，进行如下配置：&lt;/p&gt;

&lt;p&gt;      Rule list 的 profile 选 proxy&lt;/p&gt;

&lt;p&gt;      Default  的 profile 选 direct&lt;/p&gt;

&lt;p&gt;      Rule list Format 选择 AutoProxy&lt;/p&gt;

&lt;p&gt;   Rule list URL的gfwlist规则：&lt;/p&gt;

&lt;p&gt;      链接:&lt;a href=&quot;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;&gt;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;   下载规则文件Download Profile Now，左边Apply changes保存，完成之后，一定一定要点击下面的应用选项，进行保存，有博主踩过坑。&lt;/p&gt;

&lt;p&gt;第四步：开机启动：&lt;/p&gt;

&lt;p&gt;   以下使用Systemd来实现shadowsocks开机自启：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /etc/systemd/system/shadowsocks.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在里面填写如下内容：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Shadowsocks Client Service
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network.target
 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;simple
&lt;span class=&quot;nv&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/sslocal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /mydir/shadowsocks.json
 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;   &lt;em&gt;[TIPS]把root改为自己的用户名&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;      &lt;em&gt;把/mydir/shadowsocks.json修改为你的shadowsocks.json路径&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;      &lt;em&gt;把/usr/bin/sslocal改为你自己sslocal的路径(我的是/usr/local/bin/sslocal&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;翻墙测试&quot;&gt;翻墙测试&lt;/h4&gt;

&lt;p&gt;   我们现在打开&lt;a href=&quot;www.google.com&quot;&gt;&lt;strong&gt;谷歌&lt;/strong&gt;&lt;/a&gt; ，你会发现打不开，进入Proxy SwitchyOmega，如图:
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/18.png&quot; alt=&quot;图片14&quot; height=&quot;25%&quot; width=&quot;25%&quot; /&gt;
   这时候你会发现有一个资源未加载，我们点击它，如图：
&lt;img src=&quot;http://localhost:4000/assets/img/vpsServer/19.png&quot; alt=&quot;图片15&quot; height=&quot;30%&quot; width=&quot;30%&quot; /&gt;
   选择 proxy情景模式，点击添加条件，完成刷新页面即可。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;备注&quot;&gt;备注：&lt;/h2&gt;

&lt;p&gt;   本文非原创，而是参考多篇博客上综合试验而写，主要参考以下博客：&lt;/p&gt;

&lt;p&gt;     1、&lt;a href=&quot;http://jiyiren.github.io/2016/10/06/fanqiang/&quot;&gt; http://jiyiren.github.io/2016/10/06/fanqiang/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;     2、&lt;a href=&quot;https://blog.csdn.net/HelloZEX/article/details/80806445&quot;&gt;https://blog.csdn.net/HelloZEX/article/details/80806445&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    3、&lt;a href=&quot;https://segmentfault.com/a/1190000015725355?utm_source=tag-newest&quot;&gt;https://segmentfault.com/a/1190000015725355?utm_source=tag-newest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;     4、&lt;a href=&quot;https://blog.csdn.net/killerstranger/article/details/80620171&quot;&gt;https://blog.csdn.net/killerstranger/article/details/80620171&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/31/VPSserver.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/31/VPSserver.html</guid>
        
        <category>VPS</category>
        
        <category>shadowsocks</category>
        
        
      </item>
    
      <item>
        <title>Hello ！</title>
        <description>&lt;h2 id=&quot;welcome&quot;&gt;Welcome&lt;/h2&gt;

&lt;p&gt;好与不好都走了，幸与不幸都过了。真正的梦想，永远在实现之中，更在坚持之中。累了，就停一停，让手贴着手，温暖冷漠的岁月；苦了，就笑一笑，让心贴着心，体味至爱的抚摸；哭了，就让泪水尽情流淌，痛彻心菲也是精彩。选择一条道路，就选择一种人生一种无悔。阴霾终会荡尽，狞笑终是无聊卑鄙终会沉寂。&lt;/p&gt;

&lt;p&gt;欢迎来到我的博客，似水流年———当我想你的时候&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                                                                     MAX
                                                               2018.08.26
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;enjoy-a-video&quot;&gt;Enjoy a Video&lt;/h2&gt;

&lt;iframe width=&quot;711&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/khTXWh9gKuY&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sun, 26 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/26/hello.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/26/hello.html</guid>
        
        <category>BlogVideo</category>
        
        
      </item>
    
  </channel>
</rss>
